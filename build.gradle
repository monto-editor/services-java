buildscript {
  repositories {
    maven {
      url "https://plugins.gradle.org/m2/"
    }
  }

  dependencies {
    classpath 'com.github.jengelman.gradle.plugins:shadow:1.2.3'
    classpath 'de.undercouch:gradle-download-task:3.0.0'
  }
}

import de.undercouch.gradle.tasks.download.Download
import de.undercouch.gradle.tasks.download.Verify

subprojects {

  apply plugin: 'java'
  apply plugin: 'com.github.johnrengelman.shadow'
  apply plugin: 'de.undercouch.download'

  sourceCompatibility = 1.8

  repositories {
    mavenCentral()
  }
}

project(':shared') {
  dependencies {
    compile project(':services-base-java')
    compile 'org.antlr:antlr4-runtime:4.5.3'
    compile 'commons-cli:commons-cli:1.3.1'
    compile 'com.github.javaparser:javaparser-core:2.3.0'
  }
}

project(':main') {
  jar {
    manifest {
      attributes('Main-Class': 'monto.service.java8.Main')
    }
  }

  dependencies {
    compile project(':shared')
  }
}

project(':benchmarks') {
  jar {
    manifest {
      attributes('Main-Class': 'monto.service.benchmark.IntegrationBenchmark')
    }
  }

  dependencies {
    compile project(':shared'), project(':main')
  }

  task downloadAnt(type: Download) {
    src 'http://mirror.dkd.de/apache//ant/source/apache-ant-1.9.7-src.zip'
    dest buildDir
    onlyIfNewer true
  }

  task verifyAnt(type: Verify, dependsOn: downloadAnt) {
    src new File(buildDir, 'apache-ant-1.9.7-src.zip')
    algorithm 'SHA1'
    checksum 'b67aad4b97bb83eb4ad8cce5e6b1efa7e2e7cc1a'
  }

  task unzipAnt(type: Copy, dependsOn: verifyAnt) {
    from zipTree(new File(buildDir, 'apache-ant-1.9.7-src.zip'))
    into file("${buildDir}/")
  }

  task prepareAnt(type: Copy, dependsOn: unzipAnt) {
    from ('build/apache-ant-1.9.7/src/main') {
      include('**/*.java')
    }
    into ('build/apache-ant')
  }

  task exec(type: JavaExec, dependsOn: [prepareAnt,classes,':main:shadowJar']) {
    classpath = sourceSets.main.runtimeClasspath
    main = 'monto.service.benchmark.IntegrationBenchmark'
    jvmArgs = [ "-Dcorpus.location=${new File(buildDir, 'apache-ant/')}",
                "-Dcsv.output=${buildDir}",
                "-Dbroker=../../broker",
                "-Dservices.jar=../main/build/libs/main-all.jar"
              ]
  }

  task calcFileLengths(type: Exec, dependsOn: prepareAnt) {
    workingDir buildDir
    commandLine 'cloc', '--csv', '--fullpath', '--by-file',
                "--out=${new File(buildDir, 'filelengths.csv')}",
                "${buildDir}/apache-ant/"
  }

  task plot(type: Exec, dependsOn: [calcFileLengths,exec]) {
    workingDir buildDir
    commandLine 'Rscript', '../../plot.r'
  }
}